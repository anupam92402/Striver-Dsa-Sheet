class Solution {
    public int[] searchRange(int[] nums, int target) {
        int first = binarySearch(nums, target, true);
        int last = binarySearch(nums, target, false);
        return new int[]{first, last};
    }
    
    public int binarySearch(int[] nums, int target, boolean occurence) {
        int n = nums.length;
        int low = 0, high = n - 1, ans = -1;
        while(low <= high){
            int mid = (low + high) /  2;
            if(nums[mid] == target)
                ans = mid;
            if(occurence){
                if(nums[mid] >= target)
                    high = mid - 1;
                else
                    low = mid + 1;
           }else{
                if(nums[mid] > target)
                    high = mid - 1;
                else
                    low = mid + 1;
                
            }
        }
        return ans;
    }
}

// TC :- Log(N)
// SC :- 0(1)