class Solution {
    public boolean search(int[] nums, int target) {
        int low = 0, high = nums.length - 1;
        while(low <= high){
            while (low < high && nums[low] == nums[low + 1])
                ++low;
            while (low < high && nums[high] == nums[high - 1])
                --high;
            int mid = (low + high) / 2;
            if(nums[mid] == target){
                return true;
            }else if(nums[low] <= nums[mid]){
                if(target >= nums[low] && target <= nums[mid]){
                    high = mid - 1;
                }else{
                    low = mid + 1;
                }
            }else{
                if(target >= nums[mid] && target <= nums[high]){
                    low = mid + 1;
                }else{
                    high = mid - 1;
                }
            }
        }
        return false;
    }
}

// TC :- 0(Log(N)) and 0(N) worst case
// SC :- 0(1)