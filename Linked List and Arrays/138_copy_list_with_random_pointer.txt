/*
// Definition for a Node.
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
*/

class Solution {
    public Node copyRandomList(Node head) {
        Map<Node, Node>map = new HashMap<>();
        Node temp = head;
        while(temp != null){
            map.put(temp, new Node(temp.val));
            temp = temp.next;
        }
        temp = head;
        while(temp != null){
            Node next = temp.next;
            Node random = temp.random;
            
            if(next != null)
                map.get(temp).next = map.get(next);
            
            if(random != null)
                map.get(temp).random = map.get(random);
            
            temp = temp.next;
        }
        return map.get(head);
    }
}

// TC :- 0(N)
// SC :- 0(N)
