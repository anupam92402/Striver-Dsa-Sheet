class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        List<List<Integer>>result = new ArrayList<>();
        Arrays.sort(nums);
        int n = nums.length;
        if(nums[0] > 0 || nums[n - 1] < 0)
            return result;
        for(int i = 0; i < n - 2; i++){
            if(i > 0 && nums[i] == nums[i - 1])
                continue;
            int j = i + 1, k = n - 1;
            while(j < k){
                if(nums[i] + nums[j] == -1 * nums[k]){
                    List<Integer>temp = new ArrayList<>();
                    temp.add(nums[i]);
                    temp.add(nums[j]);
                    temp.add(nums[k]);
                    result.add(temp);
                    j++;
                    while(j < k && nums[j] == nums[j - 1]){
                        j++;
                    }
                }else if(nums[i] + nums[j] > -1 * nums[k]){
                    k--;
                }else{
                    j++;
                }
            }
        }
        return result;
    }
}

// TC :- 0(N ^ 2)
// SC :- 0(1)