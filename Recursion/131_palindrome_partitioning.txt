class Solution {
    public List<List<String>> partition(String s) {
        List<List<String>>res = new ArrayList<>();
        List<String>temp = new ArrayList<>();
        solve(res, s, 0, temp);
        return res;
    }
    
    public void solve(List<List<String>>res, String s, int idx, List<String>temp){
        if(idx == s.length())
            res.add(new ArrayList<>(temp));
        for(int i = idx; i < s.length(); i++){
            if(palindrome(s, idx, i)){
                temp.add(s.substring(idx, i + 1));
                solve(res, s, i + 1, temp);
                temp.remove(temp.size() - 1);
            }
        }
    }
    
    public boolean palindrome(String s, int i, int j){
        while(i < j){
            if(s.charAt(i) != s.charAt(j))
                return false;
            i++;
            j--;
        }
        return true;
    }
}