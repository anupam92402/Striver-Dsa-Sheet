class Solution {
    public void nextPermutation(int[] nums) {
        int idx = -1, n = nums.length;
        if(n == 1)
            return;
        for(int i = n - 2; i >= 0; i--){
            if(nums[i] < nums[i + 1]){
                idx = i;
                break;
            }
        }
        if(idx == -1){
            Arrays.sort(nums);
            return;
        }
        int max = -1;
        for(int i = idx + 1; i < n; i++){
            if(max == -1 || (nums[i] > nums[idx] && nums[i] <= nums[max])){
                max = i;
            }
        }
        swap(nums, idx, max);
        reverse(nums, idx + 1, n - 1);
    }
    
    public void swap(int[] nums, int idx1, int idx2){
        int temp = nums[idx1];
        nums[idx1] = nums[idx2];
        nums[idx2] = temp;
    }
    
    public void reverse(int[] nums, int start, int end){
        while(start < end){
            swap(nums, start, end);
            start++;
            end--;
        }
    }
    
}