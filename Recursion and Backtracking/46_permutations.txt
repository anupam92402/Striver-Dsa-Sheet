class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>>result = new ArrayList<>();
        List<Integer>temp = new ArrayList<>();
        boolean[]visited = new boolean[nums.length];
        permutation(nums, temp, result, visited);
        return result;
    }
    
    public void permutation(int[] nums, List<Integer>temp,List<List<Integer>>result, boolean[]visited){
        if(temp.size() == nums.length){
            result.add(new ArrayList<>(temp));
            return;
        }
        
        for(int i = 0; i < nums.length; i++){
            if(!visited[i]){
                visited[i] = true;
                temp.add(nums[i]);
                permutation(nums, temp, result, visited);
                temp.remove(temp.size() - 1);
                visited[i] = false;
            }
        }
            
    }
    
}