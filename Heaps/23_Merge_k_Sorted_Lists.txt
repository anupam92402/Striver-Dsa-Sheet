/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        ListNode dummyHead = new ListNode(0), dummy = dummyHead;
        PriorityQueue<ListNode>heap = new PriorityQueue<>((a, b) -> a.val - b.val);
        for(ListNode list : lists)
            if(list != null)
                heap.add(list);
        while(heap.size() != 0){
            ListNode remove = heap.remove();
            dummy.next = remove;
            dummy = remove;
            if(remove.next != null)
                heap.add(remove.next);
        }
        return dummyHead.next;
    }
}