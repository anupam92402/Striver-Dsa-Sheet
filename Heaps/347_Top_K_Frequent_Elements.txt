class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        HashMap<Integer, Integer>map = new HashMap<>();
        for(int num : nums)
            map.put(num, map.getOrDefault(num, 0) + 1);
        int[]result = new int[k];
        PriorityQueue<int[]>heap = new PriorityQueue<>((a, b) -> a[1] - b[1]);
        for(int key : map.keySet()){
            heap.add(new int[]{key, map.get(key)});
            if(heap.size() > k)
                heap.remove();
        }
        for(int i = 0; i < k; i++)
            result[i] = heap.remove()[0];
        return result;
    }
}